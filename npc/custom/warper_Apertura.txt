//===== rAthena Script ======================================= 
//= Warper
//===== Description: ========================================= 
//= A complete - but very condensed - warper script.
//===== Additional Comments: =================================
//= 1.0 Initial script By [Euphy].
//= 1.1 Added missing duplicates and fixed coordinates.
//=     Some coordinates written by [Tekno-Kanix] and [ToastOfDoom].
//= 1.2 Added new episodes and simplified functions.
//= 1.3 Added Renewal checks and Instances menu.
//=     Aligned coordinates with @go.
//= 1.4 Added new Guild Dungeons.
//= 1.4a Slight edits.
//= 1.4b Added Wolfchev's Laboratory warp.
//= 1.5 Added Lasagna ,Para Market ,WOE TE ,Instances and settings [sader1992].
//= 1.5a Fix Bifrost Tower
//============================================================

-	script	Warper	-1,{
function Go; function Disp; function Pick; function Restrict;

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------





if (BaseLevel <80) {

if (countitem(602)<1){
	mes "^0000FF[Warp Agent]^000000";
	mes "No cuentas con una ^0000FF" + getitemname(602) +"^000000.";
	mes "Deseas comprar una por 300z?";
    switch(select("Si:No")) {
	 case 1: 
			if (Zeny < 300) { 
			next;
			mes "^0000FF[Warp Agent]^000000";
			mes " ";	
			mes "No tienes Suficiente zeny, para comprar una ^0000FF" + getitemname(602) +"^000000."; end;}
			
			set zeny, zeny - 300;
			getitem 602,1;
			next;
	case 2:
			next;
	}
} //Fin If




mes "^0000FF[Warp Agent]^000000";
mes " ";
mes "Bienvenido ^0000FF" + strcharinfo(0) + "^000000, si eres nivel menor de 80, el Warp no tiene costo.";
set .payment, 0;
menu	"Last Warp ^777777["+lastwarp$+"]^000000",-,
    	" ~ Ciudades",Towns,
		//" ~ Fields",Fields,
    	" ~ Calabozos",Dungeons;
    	//" ~ Guild Dungeons",Guild_Dungeons,
    	//" ~ Instances",Instances,
		//" ~ Calabozos Especiales",DungeonsEspeciales,
		//" ~ Guild Castles",Castles,
		//" ~ MVP Room",mvp_room,
    	//" ~ Areas Especiales",Special;

	if (lastwarp$ == "")
		message strcharinfo(0),"You haven't warped anywhere yet.";
	else
		warp lastwarp$,lastwarpx,lastwarpy;
	end;
}

else if (BaseLevel >=80) {

if (countitem(602)<1){
	mes "^0000FF[Warp Agent]^000000";
	mes "No cuentas con una ^0000FF" + getitemname(602) +"^000000.";
	mes "Deseas comprar una por 300z?";
    switch(select("Si:No")) {
	 case 1: 
			if (Zeny < 300) {
			next;
			mes "^0000FF[Warp Agent]^000000";
			mes " ";	
			mes "No tienes Suficiente zeny, para comprar una ^0000FF" + getitemname(602) +"^000000."; end;}
			
			set zeny, zeny - 300;
			getitem 602,1;
			next;
	case 2:
			next;
	}
} //Fin If


set .payment, 5000;
if (zeny<.payment){ mes "^0000FF[Warp Agent]^000000"; mes " "; mes "No tienes suficiente zeny para viajar."; end;}
mes "^0000FF[Warp Agent]^000000";
mes " ";
mes "Bienvenido ^0000FF" + strcharinfo(0) + "^000000, a partir de nivel 80, el Warp tiene un costo de ^0000FF" + .payment + "^000000 z.";
menu	"Last Warp ^777777["+lastwarp$+"]^000000",-,
    	" ~ Ciudades",Towns,
		//" ~ Fields",Fields,
    	" ~ Calabozos",Dungeons;
    	//" ~ Guild Dungeons",Guild_Dungeons,
    	//" ~ Instances",Instances,
		//" ~ Calabozos Especiales",DungeonsEspeciales,
		//" ~ Guild Castles",Castles,
		//" ~ MVP Room",mvp_room,
    	//" ~ Areas Especiales",Special;

	if (lastwarp$ == "")
		message strcharinfo(0),"You haven't warped anywhere yet.";
	else
		warp lastwarp$,lastwarpx,lastwarpy;
		set zeny, zeny - .payment;
	end;
}



// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
//
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection (auto-numbered).
//	~ Fields and Dungeons must use Disp and Pick Functions.
//
// * Disp("<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection (listed).
//
// * Restrict("<RE | Pre-RE>"{,<menu option numbers>});
//	~ Only allows map for Renewal or Pre-Renewal modes.
//     If menu option numbers are given, only those maps
//     will be restricted (i.e. not for "Go").
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------

function Go {
	set lastwarp$, getarg(0);
	set lastwarpx, getarg(1,0);
	set lastwarpy, getarg(2,0);
	set zeny, zeny - .payment;
	warp getarg(0),getarg(1,0),getarg(2,0);
	
	end;
}
function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$,"";
		for (set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
			set @menu$, @menu$+getarg(0)+" "+.@i+":";
	}
	return;
}
function Pick {
	set .@warp_block,@warp_block;
	set @warp_block,0;
	if((@f && .OnlyFirstFld) || (@d && .OnlyFirstDun)|| (@de && .OnlyFirstDun) || (@mvp && .OnlyFirstDun)){
		set .@select,1;
		if(.@warp_block){
			while(.@warp_block & (1<<.@select)){
				.@select += 1;
			}
		}
	}else{
		set .@select, select(@menu$);
	}
	if (getarg(0) == "") {
		set .@i, .@select;
		set .@map$, getarg(.@i);
	} else {
		set .@i, .@select-getarg(1,0);
		set .@map$, getarg(0)+((.@i<10)?"0":"")+.@i;
	}
	if (.@warp_block & (1<<.@select)) {
		message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
		end;
	}
	set .@x, @c[.@i*2];
	set .@y, @c[.@i*2+1];
	deletearray @c[0],getarraysize(@c);
	@f = false; @d = false; @de = false; @mvp = false;
	Go(.@map$,.@x,.@y);
}
function Restrict {
	if ((getarg(0) == "RE" && !checkre(0)) || (getarg(0) == "Pre-RE" && checkre(0))) {
		if (getarg(1,0)) {
			set @warp_block,0;
			for (set .@i,1; .@i<getargcount(); set .@i,.@i+1)
				set @warp_block, @warp_block | (1<<getarg(.@i));
		} else {
			message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
			end;
		}
	}
	return;
}

// --------------------------------------------------
	Towns:
// --------------------------------------------------
menu	
"Prontera ["+getmapusers("prontera")+"]",T1, 
"Alberta ["+getmapusers("alberta")+"]",T2, 
"Aldebaran ["+getmapusers("aldebaran")+"]",T3, 
"Amatsu ["+getmapusers("amatsu")+"]",T4, 
"Ayothaya ["+getmapusers("ayothaya")+"]",T5,
"Brasilis ["+getmapusers("brasilis")+"]",T6, 
"Comodo ["+getmapusers("comodo")+"]",T7, 
//"Dewata",T8, 
//"Eclage",T9, 
"Einbech ["+getmapusers("einbech")+"]",T10, 
"Einbroch ["+getmapusers("einbroch")+"]",T11, 
//"El Dicastes",T12, 
"Geffen ["+getmapusers("geffen")+"]",T13, 
"Gonryun ["+getmapusers("gonryun")+"]",T14, 
"Hugel ["+getmapusers("hugel")+"]",T15,
"Izlude ["+getmapusers("izlude")+"]",T16, 
//"Jawaii",T17, 
//"Lasagna",T18, 
"Lighthalzen ["+getmapusers("lighthalzen")+"]",T19, 
"Louyang ["+getmapusers("louyang")+"]",T20,
"Lutie ["+getmapusers("xmas")+"]",T21, 
//"Malangdo",T22, 
//"Malaya",T23, 
"Manuk ["+getmapusers("manuk")+"]",T24,
//"Midgarts Expedition Camp",T25, 
//"Mora",T26, 
"Morroc ["+getmapusers("morocc")+"]",T27, 
"Moscovia ["+getmapusers("moscovia")+"]",T28,
//"Nameless Island",T29, 
"Niflheim ["+getmapusers("niflheim")+"]",T30, 
"New World (Mid Camp) ["+getmapusers("moc_fild22b")+"]",T38, 
"Payon ["+getmapusers("payon")+"]",T31, 
"Rachel["+getmapusers("rachel")+"]",T32, 
"Splendide ["+getmapusers("splendide")+"]",T33,
//"Thor Camp",T34, 
"Umbala ["+getmapusers("umbala")+"]",T35, 
"Veins ["+getmapusers("veins")+"]",T36, 
"Yuno ["+getmapusers("yuno")+"]",T37;

T1: Go("prontera",155,183);
T2: Go("alberta",28,234);
T3: Go("aldebaran",140,131);
T4: Go("amatsu",198,84);
T5: Go("ayothaya",208,166);
T6: Go("brasilis",196,217);
T7: Go("comodo",209,143);
T8: Restrict("RE");
	Go("dewata",200,180);
T9: Restrict("RE");
	Go("ecl_in01",48,53);
T10: Go("einbech",63,35);
T11: Go("einbroch",64,200);
T12: Restrict("RE");
	 Go("dicastes01",198,187);
T13: Go("geffen",119,59);
T14: Go("gonryun",160,120);
T15: Go("hugel",96,145);
T16: Go("izlude",128,(checkre(3)?146:114));
T17: Go("jawaii",251,132);
T18: Restrict("RE");
	 Go("lasagna",193,182);
T19: Go("lighthalzen",158,92);
T20: Go("louyang",217,100);
T21: Go("xmas",147,134);
T22: Restrict("RE");
	 Go("malangdo",140,114);
T23: Restrict("RE");
	 Go("malaya",231,200);
T24: //Go("manuk",282,138);
if (ep13_newbs == 100)
		{warp "manuk",282,138;
		end;}
		else if (ep13_newbs != 100)
			{mes "^0000FF[Warp Agent]^000000";
			mes "Aun no haz realizado la quest ^0000FFNew Surroundings^000000";
			end;}


T25: Go("mid_camp",210,288);
T26: Restrict("RE");
	 Go("mora",55,146);
T27: Go("morocc",156,93);
T28: Go("moscovia",223,184);
//T29: Go("ve_fild07",129,130);
//T29: Go("nameless_i",256,215);
//T29: Go("nameless_n",256,215);
T30: Go("niflheim",202,174);
T31: Go("payon",179,100);
T32: Go("rachel",130,110);
T33: //Go("splendide",201,147);
if (ep13_newbs == 100)
		{warp "splendide",201,147;
		end;}
		else if (ep13_newbs != 100)
			{mes "^0000FF[Warp Agent]^000000";
			mes "Aun no haz realizado la quest ^0000FFNew Surroundings^000000";
			end;}
			
			
T34: Go("thor_camp",246,68);
T35: Go("umbala",97,153);
T36: Go("veins",216,123);
T37: Go("yuno",157,173);
T38: if (ep13_ryu == 100)
		{warp "mid_camp",210,291;
		end;}
		else if (ep13_ryu != 100)
			{mes "^0000FF[Warp Agent]^000000";
			mes "Aun no haz realizado la quest ^0000FFOnward to the New World^000000";
			end;}
// --------------------------------------------------
	Fields:
// --------------------------------------------------
@f = true;
menu	
"Amatsu Fields",F1, 
"Ayothaya Fields",F2, 
//"Bifrost Fields", F3,
"Brasilis Fields",F4, 
"Comodo Fields",F5, 
//"Dewata Fields",F6,
//"Eclage Fields",F7, 
"Einbroch Fields",F8, 
//"El Dicastes Fields",F9,
"Geffen Fields",F10, 
"Gonryun Fields",F11, 
"Hugel Fields",F12,
//"Lasagna Fields",F13, 
"Lighthalzen Fields",F14, 
"Louyang Field",F15, 
"Lutie Field",F16, 
//"Malaya Fields",F17, 
"Manuk Fields",F18, 
"Mjolnir Fields",F19, 
"Moscovia Fields",F20, 
"Niflheim Fields",F21, 
"Payon Forests",F22, 
"Prontera Fields",F23, 
"Rachel Fields",F24, 
"Sograt Deserts",F25, 
"Splendide Fields",F26, 
"Umbala Fields",F27, 
"Veins Fields",F28, 
"Yuno Fields",F29;

F1: setarray @c[2],190,197;
	Disp("Amatsu Field",1,1); Pick("ama_fild");
F2: setarray @c[2],173,134,212,150;
	Disp("Ayothaya Field",1,2); Pick("ayo_fild");
F3: Restrict("RE");
	setarray @c[2],193,220,220,187;
	Disp("Bifrost Field",1,2); Pick("bif_fild");
F4: Restrict("RE");
	setarray @c[2],74,32;
	Disp("Brasilis Field",1,1); Pick("bra_fild");
F5: Restrict("Pre-RE",5);
	setarray @c[2],180,178,231,160,191,172,228,194,224,203,190,223,234,177,194,175,172,172;
	Disp("Comodo Field",1,9); Pick("cmd_fild");
F6: Restrict("RE");
	setarray @c[2],371,212;
	Disp("Dewata Field",1,1); Pick("dew_fild");
F7: Restrict("RE");
	setarray @c[2],97,314;
	Disp("Eclage Field",1,1); Pick("ecl_fild");
F8: Restrict("Pre-RE",2,10);
	setarray @c[2],142,225,182,141,187,228,185,173,216,173,195,148,272,220,173,214,207,174,196,200;
	Disp("Einbroch Field",1,10); Pick("ein_fild");
F9: Restrict("RE");
	setarray @c[2],143,132,143,217;
	Disp("El Dicastes Field",1,2); Pick("dic_fild");
F10: Restrict("Pre-RE",13,15);
	 setarray @c[0],46,199,213,204,195,212,257,192,188,171,166,263,248,158,195,191,186,183,221,117,178,218,136,328,240,181,235,235,211,185;
	 Disp("Geffen Field",0,14); Pick("gef_fild",1);
F11: setarray @c[2],220,227;
	 Disp("Gonryun Field",1,1); Pick("gon_fild");
F12: Restrict("Pre-RE",3,7);
	 setarray @c[2],268,101,222,193,232,185,252,189,196,106,216,220,227,197;
	 Disp("Hugel Field",1,7); Pick("hu_fild");
F13: Restrict("RE");
	 setarray @c[2],344,371,20,98;
	 Disp("Lasagna Field",1,2); Pick("lasa_fild");	 
F14: setarray @c[2],240,179,185,235,240,226;
	 Disp("Lighthalzen Field",1,3); Pick("lhz_fild");
F15: setarray @c[2],229,187;
	 Disp("Louyang Field",1,1); Pick("lou_fild");
F16: setarray @c[2],115,145;
	 Disp("Lutie Field",1,1); Pick("xmas_fild");
F17: Restrict("RE");
	 setarray @c[2],40,272,207,180;
	 Disp("Malaya Field",1,2); Pick("ma_fild");
F18: setarray @c[2],35,236,35,262,84,365;
	 Disp("Manuk Field",1,3); Pick("man_fild");
F19: setarray @c[2],204,120,175,193,208,213,179,180,181,240,195,270,235,202,188,215,205,144,245,223,180,206,196,208;
	 Disp("Mjolnir Field",1,12); Pick("mjolnir_");
F20: setarray @c[2],82,104,131,147;
	 Disp("Moscovia Field",1,2); Pick("mosk_fild");
F21: setarray @c[2],215,229,167,234;
	 Disp("Niflheim Field",1,2); Pick("nif_fild");
F22: Restrict("Pre-RE",5,11);
	 setarray @c[2],158,206,151,219,205,148,186,247,134,204,193,235,200,177,137,189,201,224,160,205,194,150;
	 Disp("Payon Forest",1,11); Pick("pay_fild");
F23: setarray @c[0],208,227,190,206,240,206,190,143,307,252,239,213,185,188,193,194,187,218,210,183,195,149,198,164;
	 Disp("Prontera Field",0,11); Pick("prt_fild",1);
F24: Restrict("Pre-RE",2,7,9,10,11,13);
	 setarray @c[2],192,162,235,166,202,206,202,208,225,202,202,214,263,196,217,201,87,121,277,181,221,185,175,200,174,197;
	 Disp("Rachel Field",1,13); Pick("ra_fild");
F25: if(.Satan_Morroc){
	 setarray @c[2],219,205,177,206,194,182,224,170,198,216,156,187,185,263,206,228,208,238,209,223,85,97,207,202,31,195,38,195;
	 Disp("Sograt Desert 1:Sograt Desert 2:Sograt Desert 3:Sograt Desert 7:Sograt Desert 11:Sograt Desert 12:Sograt Desert 13:Sograt Desert 16:Sograt Desert 17:Sograt Desert 18:Sograt Desert 19:Sograt Desert 20:Sograt Desert 21:Sograt Desert 22");
	 Pick("","moc_fild01","moc_fild02","moc_fild03","moc_fild07","moc_fild11","moc_fild12","moc_fild13","moc_fild16","moc_fild17","moc_fild18","moc_fild19","moc_fild20","moc_fild21","moc_fild22");
	 }else{
	 setarray @c[2],219,205,177,206,194,182,146,297,204,197,275,302,224,170,139,123,101,110,341,39,198,216,156,187,185,263,223,222,170,257,206,228,208,238,209,223,85,97;
	 Disp("Sograt Desert",1,19); Pick("moc_fild");
	 }
F26: setarray @c[2],175,186,236,184,188,204;
	 Disp("Splendide Field",1,3); Pick("spl_fild");
F27: setarray @c[2],217,206,223,221,237,215,202,197;
	 Disp("Umbala Field",1,4); Pick("um_fild");
F28: Restrict("Pre-RE",5);
	 setarray @c[2],186,175,196,370,222,45,51,250,202,324,150,223,149,307;
	 Disp("Veins Field",1,7); Pick("ve_fild");
F29: Restrict("Pre-RE",5,10);
	 setarray @c[2],189,224,192,207,221,157,226,199,223,177,187,232,231,174,196,203,183,214,200,124,195,226,210,304;
	 Disp("Yuno Field",1,12); Pick("yuno_fild");

// --------------------------------------------------
	Dungeons:
// --------------------------------------------------
@d = true;
menu	
"Abyss Lakes",D1, 
"Amatsu Dungeon",D2, 
"Anthell",D3,
"Ayothaya Dungeon",D4, 
"Beach Dungeon",D5, 
//"Bifrost Tower",D42,
"Bio Labs",D6, 
"Brasilis Dungeon",D7, 
"Byalan Dungeon",D8,
"Clock Tower",D9,
"Coal Mines",D10, 
"Culvert",D11, 
//"Cursed Abbey",D12, 
//"Dewata Dungeon",D13,
"Einbroch Dungeon",D14, 
//"Gefenia",D15, 
"Geffen Dungeon",D16,
"Glast Heim",D17, 
"Gonryun Dungeon",D18, 
"Hidden Dungeon",D19,
"Ice Dungeon",D20, 
"Juperos",D21, 
"Kiel Dungeon",D22, 
//"Lasagna Dungeon",D23,
"Louyang Dungeon",D24, 
"Magma Dungeon",D25, 
//"Malangdo Dungeon",D26,
"Moscovia Dungeon",D27, 
"Nameless Island",D43,
//"Nidhogg's Dungeon",D28, 
"Odin Temple",D29,
"Orc Dungeon",D30, 
"Payon Dungeon",D31, 
"Pyramids",D32, 
"Rachel Sanctuary",D33,
//"Rachel Sanctuary",D33A,
//"Scaraba Hole",D34, 
"Sphinx",D35, 
"Sunken Ship",D36, 
"Thanatos Tower",D37,
"Thor Volcano",D38, 
"Toy Factory",D39, 
"Turtle Dungeon",D40, 
"Umbala Dungeon",D41;
//"RACHEL QUEST",D33A;


D1: setarray @c[2],261,272,275,270;
	Disp("Abyss Lakes",1,2); Pick("abyss_");

D2: setarray @c[2],228,11,34,41;
	Disp("Amatsu Dungeon",1,2); Pick("ama_dun");

D3: setarray @c[2],35,262;
	Disp("Anthell",1); Pick("anthell");

D4: setarray @c[2],275,19;
	Disp("Ancient Shrine Maze"); Pick("ayo_dun");

D5: setarray @c[2],266,67,255,244;
	Disp("Beach Dungeon",1,1); Pick("","beach_dun","beach_dun2");

D6: if (MISC_QUEST&512) {
	setarray @c[2],150,288,150,18;
	Disp("Bio Lab",1,2); Pick("lhz_dun");

	}
	
else {Go("lighthalzen",307,302);
}




/*
D7: Restrict("RE");
	setarray @c[2],87,47,262,262;
	Disp("Brasilis Dungeon",1,2); Pick("bra_dun");
*/

D7: Go("bra_in01",13,178);

D8: Restrict("RE",6);
	setarray @c[0],168,168,253,252,236,204,32,63,26,27;
	Disp("Byalan Dungeon",1,5); Pick("iz_dun",1);

D9: setarray @c[2],199,159,148,283,65,147,297,25,127,169,277,178;
	Disp("Clock Tower 1:Clock Tower 2:Clock Tower 3:Basement 1:Basement 2:Basement 3");
	Pick("","c_tower1","c_tower2","c_tower3","alde_dun01","alde_dun02","alde_dun03");

D10: setarray @c[2],52,17,381,343,302,262;
	 Disp("Coal Mines",1,3); Pick("mjo_dun");

D11: setarray @c[2],131,247,19,19,180,169;
	 Disp("Culvert",1,3); Pick("","prt_sewb1","prt_sewb2","prt_sewb3");

D12: setarray @c[2],51,14,150,11,120,10;
	 Disp("Cursed Abbey",1,3); Pick("abbey");

D13: Restrict("RE");
	 setarray @c[2],285,160,299,29;
	 Disp("Dewata Dungeon",1,2); Pick("dew_dun");

D14: setarray @c[2],22,14;
	 Disp("Einbroch Dungeon",1); Pick("ein_dun");

D15: setarray @c[2],40,103,203,34,266,168,130,272;
	 Disp("Gefenia",1,4); Pick("gefenia",0);

D16: setarray @c[0],104,99,115,236,106,132;
	 Disp("Geffen Dungeon",1,3); Pick("gef_dun",1);

D17: setarray @c[2],370,304,199,29,104,25,150,15,157,287,147,15,258,255,108,291,171,283,68,277,156,7,12,7,133,271,224,274,14,70,150,14;
	 Disp("Entrance:Castle 1:Castle 2:Chivalry 1:Chivalry 2:Churchyard:Culvert 1:Culvert 2:Culvert 3:Culvert 4:St. Abbey:Staircase Dungeon:Underground Cave 1:Underground Cave 2:Underground Prison 1:Underground Prison 2");
	 Pick("","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_chyard","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1");

D18: setarray @c[2],153,53,28,113;
	 Disp("Gonryun Dungeon",1,2); Pick("gon_dun");

D19: setarray @c[2],176,7,93,20,23,8;
	 Disp("Hidden Dungeon",1,3); Pick("prt_maze");

D20: setarray @c[2],157,14,151,155,149,22;
	 Disp("Ice Dungeon",1,3); Pick("ice_dun");

D21: setarray @c[2],140,51,53,247,37,63;
	 Disp("Entrance:Juperos 1:Juperos 2");
	 Pick("","jupe_cave","juperos_01","juperos_02");

D22: Go("yuno_fild08",74,171);

D23: Restrict("RE");
	 setarray @c[2],24,143,22,171,190,18;
	 Disp("Lasagna Dungeon",1,3); Pick("lasa_dun");

D24: setarray @c[2],218,196,282,20;
	 Disp("The Royal Tomb:Inside the Royal Tomb"); Pick("lou_dun");

D25: setarray @c[2],126,68,47,30;
	 Disp("Magma Dungeon",1,2); Pick("mag_dun");

D26: Restrict("RE");
	 setarray @c[2],33,230;
	 Disp("Malangdo Dungeon",1,1); Pick("mal_dun");

D27: setarray @c[2],189,48,165,30;
	 Disp("Moscovia Dungeon",1,2); Pick("mosk_dun");





D43: if(aru_monas == 26 || countitem(40119) >= 1 || checkquest(17017) == 1) {
		
		setarray @c[2],255,214,52,16;
	Disp("Nameless Island:Abbey 1");
	Pick("","nameless_n","abbey01");
		
		end;
		}
	else {
	mes "No tienes la Quest de Nameless o la Llave";
	end;
	}










D28: setarray @c[2],61,239,60,271;
	 Disp("Nidhogg's Dungeon",1,2); Pick("nyd_dun");

D29: setarray @c[2],298,167,224,149;
	 Disp("Odin Temple",1,2); Pick("odin_tem");

D30: setarray @c[2],32,170,21,185;
	 Disp("Orc Dungeon",1,2); Pick("orcsdun");

D31: setarray @c[0],21,183,19,33,19,63,155,159;
	 Disp("Payon Dungeon",1,4); Pick("pay_dun",1);

D32: Restrict("RE",7,8);
	 setarray @c[2],192,9,10,192,100,92,94,96;
	 Disp("Pyramids 1:Pyramids 2:Pyramids 3:Basement 1");
	 Pick("","moc_pryd01","moc_pryd02","moc_pryd03","moc_pryd05");





NoQuestRachel:{ setarray @c[2],118,170;
	 Disp("Rachel Quest");
	 Pick("","ra_temple");

		end;
}

D33: if(MISC_QUEST & 8192 || countitem(40120) >= 1)
	{setarray @c[2],140,11,32,21,8,149,204,218;
	 Disp("Rachel Sanctuary",1,4); Pick("ra_san");
	end;		
	}
	else goto NoQuestRachel;







D34: Restrict("RE");
	 setarray @c[2],364,44,101,141;
	 Disp("Scaraba Hole",1,2); Pick("dic_dun");

D35: setarray @c[2],288,9,149,81,210,54,10,222;
	 Disp("Sphinx",1,4); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4");

D36: setarray @c[2],69,24;
	 Disp("Sunken Ship",1); Pick("treasure");

D37: setarray @c[2],150,39;
	 Disp("Thanatos Tower",1); Pick("tha_t");

D38: setarray @c[2],21,228,75,205;
	 Disp("Thor Volcano",1,2); Pick("thor_v");

D39: setarray @c[2],205,15;
	 Disp("Toy Factory",1); Pick("xmas_dun");

D40: setarray @c[2],154,49,148,261,132,189;
	 Disp("Entrance:Turtle Dungeon 1:Turtle Dungeon 2"); Pick("tur_dun");

D41: Restrict("Pre-RE",1,2);
	 setarray @c[2],42,31,48,30;
	 Disp("Carpenter's Shop in the Tree:Passage to a Foreign World");
	 Pick("","um_dun01","um_dun02");

D42: Restrict("RE");
	 setarray @c[2],57,13,64,88,45,14,26,23;
	 Disp("Bifrost Tower",1,4); Pick("ecl_tdun");



// --------------------------------------------------
	DungeonsEspeciales:
// --------------------------------------------------
@de = true;
menu	
"Rachel Dungeon",DE1, 
"Nameless Dungeon",DE2, 
"Geffenia Dungeon",DE3,
"Kiel Dungeon Lvl 1",DE4, 
"Kiel Dungeon Lvl 2",DE5; 



DE1: if(countitem(40120) >= 1) 
	{Go("ra_san01",140,134);
	end;
	}
	else
	{mes "No llevas contigo una ^0000FFKey Of Rachel Dungeon^000000";
	end;}


DE2: if(countitem(40119) >= 1) 
	{Go("nameless_n",257,215);
	end;
	}
	else
	{mes "No llevas contigo una ^0000FFKey Of Nameless Dungeon^000000";
	end;}

DE3: if(countitem(40121) >= 1) 
	{switch( rand(1,4) ){
        case 1: warp "gefenia01", 49, 168; end;
        case 2: warp "gefenia02", 118, 111; end;
		case 3: warp "gefenia03", 123, 275; end;
		case 4: warp "gefenia04", 125, 166; end;
		}
	end;
	}
	else
	{mes "No llevas contigo una ^0000FFKey Of Geffenia Dungeon^000000";
	end;}

DE4: if(countitem(40122) >= 1) 
	{Go("kh_dun01",4,221);
	end;
	}
	else
	{mes "No llevas contigo una ^0000FFKey Of Kiel Dungeon 1^000000";
	end;}

DE5: if(countitem(40123) >= 1) 
	{Go("kh_dun02",42,210);
	end;
	}
	else
	{mes "No llevas contigo una ^0000FFKey Of Kiel Dungeon 2^000000";
	end;}





// --------------------------------------------------
	mvp_room:
// --------------------------------------------------
@mvp = true;
menu	
"MVP Room 1",MVP1, 
"MVP Room 2",MVP2; 



MVP1:	Go("bossnia_01",44,181);
		
MVP2:	Go("bossnia_02",44,181);





// --------------------------------------------------
	Castles:
// --------------------------------------------------
/*
menu	"[FE] Aldebaran Castles",C1, "[FE] Geffen Castles",C2, "[FE] Payon Castles",C3,
    	"[FE] Prontera Castles",C4, "[SE] Arunafeltz Castles",C5, "[SE] Schwaltzvalt Castles",C6,
		"[TE] Aldebaran Castles",C7, "[TE] Prontera Castles",C8;
*/

menu	"Aldebaran Castles",C1, "Geffen Castles",C2, "Payon Castles",C3,
    	"Prontera Castles",C4;
C1: setarray @c[2],48,83,95,249,142,85,239,242,264,90;
	Disp("aldeg_cas01 - Neuschwanstein:aldeg_cas02 - Hohenschwangau:aldeg_cas03 - Nuernberg:aldeg_cas04 - Wuerzburg:aldeg_cas05 - Rothenburg");
	Pick("","alde_gld","alde_gld","alde_gld","alde_gld","alde_gld");
C2: setarray @c[2],214,75,308,240,143,240,193,278,305,87;
	Disp("gefg_cas01 - Repherion:gefg_cas02 - Eeyolbriggar:gefg_cas03 - Yesnelph:gefg_cas04 - Bergel:gefg_cas05 - Mersetzdeitz");
	Pick("","gef_fild13","gef_fild13","gef_fild13","gef_fild13","gef_fild13");
C3: setarray @c[2],121,233,295,116,317,293,140,160,204,266;
	Disp("payg_cas01 - Bright Arbor:payg_cas02 - Scarlet Palace:payg_cas03 - Holy Shadow:payg_cas04 - Sacred Altar:payg_cas05 - Bamboo Grove Hill");
	Pick("","pay_gld","pay_gld","pay_gld","pay_gld","pay_gld");
C4: setarray @c[2],134,65,240,128,153,137,111,240,208,240;
	Disp("prtg_cas01 - Kriemhild:prtg_cas02 - Swanhild:prtg_cas03 - Fadhgridh:prtg_cas04 - Skoegul:prtg_cas05 - Gondul");
	Pick("","prt_gld","prt_gld","prt_gld","prt_gld","prt_gld");
C5: setarray @c[2],158,272,83,47,68,155,299,345,292,107;
	Disp("Mardol:Cyr:Horn:Gefn:Banadis");
	Pick("","aru_gld","aru_gld","aru_gld","aru_gld","aru_gld");
C6: setarray @c[2],293,100,288,252,97,196,137,90,71,315;
	Disp("Himinn:Andlangr:Viblainn:Hljod:Skidbladnir");
	Pick("","sch_gld","sch_gld","sch_gld","sch_gld","sch_gld");
C7: Restrict("RE");
	setarray @c[2],48,83,95,249,142,85,239,242,264,90;
	Disp("Kafragarten 1:Kafragarten 2:Kafragarten 3:Kafragarten 4:Kafragarten 5");
	Pick("","te_alde_gld","te_alde_gld","te_alde_gld","te_alde_gld","te_alde_gld");
C8: Restrict("RE");
	setarray @c[2],134,65,240,128,153,137,111,240,208,240;
	Disp("Gloria 1:Gloria 2:Gloria 3:Gloria 4:Gloria 5");
	Pick("","te_prt_gld","te_prt_gld","te_prt_gld","te_prt_gld","te_prt_gld");
	
// --------------------------------------------------
	Guild_Dungeons:
// --------------------------------------------------
menu	"Baldur",G1, "Luina",G2, "Valkyrie",G3, "Britoniah",G4,
    	"Arunafeltz",G5, "Schwaltzvalt",G6, "Kafragarten",G7,
		"Gloria",G8;

G1: Restrict("RE",2,3);
	setarray @c[2],119,93,119,93,120,130;
	Disp("Baldur F1:Baldur F2:Hall of Abyss");
	Pick("","gld_dun01","gld_dun01_2","gld2_pay");
G2: Restrict("RE",2,3);
	setarray @c[2],39,161,39,161,147,155;
	Disp("Luina F1:Luina F2:Hall of Abyss");
	Pick("","gld_dun02","gld_dun02_2","gld2_ald");
G3: Restrict("RE",2,3);
	setarray @c[2],50,44,50,44,140,132;
	Disp("Valkyrie F1:Valkyrie F2:Hall of Abyss");
	Pick("","gld_dun03","gld_dun03_2","gld2_prt");
G4: Restrict("RE",2,3);
	setarray @c[2],116,45,116,45,152,118;
	Disp("Britoniah F1:Britoniah F2:Hall of Abyss");
	Pick("","gld_dun04","gld_dun04_2","gld2_gef");
G5: Go("arug_dun01",199,195);
G6: Go("schg_dun01",200,124);
G7: Restrict("RE");
	Go("teg_dun01",42,36);
G8: Restrict("RE");
	Go("teg_dun02",26,160);

// --------------------------------------------------
	Instances:
// --------------------------------------------------
menu	"Bakonawa Lake",I1, "Bangungot Hospital 2F",I2, "Buwaya Cave",I3,
		"Devil Tower",I4, "Eclage Interior",I5, "Endless Tower",I6,
		"Faceworms Nest",I7, "Geffen Magic Tournament",I8, "Ghost Palace",I9,
		"Hazy Forest",I10, "Horror Toy Factory",I11, "Malangdo Culvert",I12,
		"Nidhoggur's Nest",I13, "Octopus Cave",I14, "Old Glast Heim",I15,
		"Orc's Memory",I16, "Sarah and Fenrir",I17, "Sara Memory",I18,
		"Sealed Shrine",I19, "Wolfchev's Laboratory",I20;

I1: Restrict("RE");
	Go("ma_scene01",172,175);
I2: Restrict("RE");
	Go("ma_dun01",151,8);
I3: Restrict("RE");
	Go("ma_fild02",316,317);
I4: Restrict("RE");
	Go("dali02",137,115);
I5: Restrict("RE");
	Go("ecl_hub01",129,12);
I6: Go("e_tower",72,112);
I7: Restrict("RE");
	Go("dali",85,64);
I8: Restrict("RE");
	Go("dali",94,141);
I9: Restrict("RE");
	Go("dali02",46,128);
I10: Restrict("RE");
	Go("bif_fild01",161,334);
I11: Restrict("RE");
	Go("xmas",234,298);
I12: Restrict("RE");
	Go("mal_in01",164,21);
I13: Go("nyd_dun02",95,193);
I14: Restrict("RE");
	Go("mal_dun01",152,230);
I15: Restrict("RE");
	Go("glast_01",204,268);
I16: Go("gef_fild10",240,198);
I17: Restrict("RE");
	Go("dali02",92,141);
I18: Restrict("RE");
	Go("dali",133,108);
I19: Go("monk_test",306,143);
I20: Restrict("RE");
	Go("lhz_dun04",148,269);

// --------------------------------------------------
	Special:
// --------------------------------------------------
menu	
//"Auction Hall",S1, 
"Battlegrounds",S2, 
//"Casino",S3, 
//"Dimensional Rift",S4,
//"Eden Group Headquarters",S5, 
//"Gonryun Arena",S6, 
//"Izlude Arena",S7, 
//"Monster Race Arena",S8, 
//"Para Market",S9; 
//"Turbo Track",S10;
//"Auction Hall",S12,
//"Nature",S12, 
"Zona de Ventas",S11,
"Ciudad Principal",S13;


S1: Go("auction_01",22,68);
S2: Go("bat_room",154,150);
S3: Go("cmd_in02",179,129);
S4: Restrict("RE");
	Go("dali",113,82);	
S5: Restrict("RE");
	Go("moc_para01",31,14);
S6: Go("gon_test",48,10);
S7: Go("arena_room",100,88);
S8: Go("p_track01",62,41);
S9: Go("paramk",97,17);
S10: Go("turbo_room",99,114);
S11: GO("vend_zone",89,103);
S12: GO("nature",35,135);
S13: GO("FirstTown",216,213);

OnInit:
	.Satan_Morroc = true;	//	false will enable moc_fild 4,5,6,8,9,10,14,15 while disable moc_fild 20,21,22 Default is true.
	.OnlyFirstFld = false;	//	true will teleport to the first level of the Fields  Default is false.
	.OnlyFirstDun = true;	//	true will teleport to the first level of the Dungeons  Default is false.
	
}






// --------------------------------------------------
//	Duplicates:
// --------------------------------------------------
FirstTown,223,219,6	duplicate(Warper)	Warper#ciuIni	859
FirstTown,226,90,6	duplicate(Warper)	Warper#ciuIni2	859
FirstTown,38,232,6	duplicate(Warper)	Warper#ciuIni3	859
FirstTown,86,363,4	duplicate(Warper)	Warper#ciuIni4	859
//firstcity,66,363,4	duplicate(Warper)	Warper#ciuIni5	1098 
alb2trea,57,70,6	duplicate(Warper)	Warper#tre	859
alberta,28,240,4	duplicate(Warper)	Warper#alb	859
aldebaran,145,118,4	duplicate(Warper)	Warper#alde	859
amatsu,203,87,4	duplicate(Warper)	Warper#ama	859
ayothaya,209,169,6	duplicate(Warper)	Warper#ayo	859
comodo,195,156,4	duplicate(Warper)	Warper#com	859
einbech,59,38,6	duplicate(Warper)	Warper#einbe	859
einbroch,69,202,4	duplicate(Warper)	Warper#einbr	859
gef_fild10,71,339,4	duplicate(Warper)	Warper#orc	859
geffen,112,63,4	duplicate(Warper)	Warper#gef	859
glast_01,372,308,4	duplicate(Warper)	Warper#glh	859
gonryun,162,122,4	duplicate(Warper)	Warper#gon	859
hugel,101,151,4	duplicate(Warper)	Warper#hug	859
izlu2dun,110,92,4	duplicate(Warper)	Warper#izd	859
izlude,121,100,4	duplicate(Warper)	Warper#izl	859	//Pre-RE: (132,120)
jawaii,253,138,4	duplicate(Warper)	Warper#jaw	859
lighthalzen,162,102,4	duplicate(Warper)	Warper#lhz	859
louyang,208,103,6	duplicate(Warper)	Warper#lou	859
manuk,274,146,6	duplicate(Warper)	Warper#man	859
mid_camp,216,288,4	duplicate(Warper)	Warper#mid	859
mjolnir_02,85,364,4	duplicate(Warper)	Warper#mjo	859
moc_ruins,64,164,4	duplicate(Warper)	Warper#moc	859
morocc,159,97,4	duplicate(Warper)	Warper#mor	859
moscovia,229,191,4	duplicate(Warper)	Warper#mos	859
nameless_n,259,213,4	duplicate(Warper)	Warper#nam	859
niflheim,205,179,4	duplicate(Warper)	Warper#nif	859
pay_arche,42,134,4	duplicate(Warper)	Warper#arc	859
payon,183,102,4	duplicate(Warper)	Warper#pay	859
prontera,159,188,4	duplicate(Warper)	Warper#prt	859
prt_fild05,279,223,6	duplicate(Warper)	Warper#cul	859
rachel,135,116,4	duplicate(Warper)	Warper#rac	859
splendide,205,153,4	duplicate(Warper)	Warper#spl	859
thor_camp,249,76,4	duplicate(Warper)	Warper#thor	859
umbala,106,150,3	duplicate(Warper)	Warper#umb	859
veins,214,123,4	duplicate(Warper)	Warper#ve	859
xmas,150,136,6	duplicate(Warper)	Warper#xmas	859
yuno,148,187,4	duplicate(Warper)	Warper#yuno	859

//nature,44,128,4	duplicate(Warper)	Warper#nature	553
// --------------------------------------------------
//	Duplicates (Renewal):
// --------------------------------------------------
brasilis,201,222,4	duplicate(Warper)	Warper#bra	859
dewata,204,186,6	duplicate(Warper)	Warper#dew	859
dicastes01,194,194,6	duplicate(Warper)	Warper#dic	859
ecl_in01,51,60,4	duplicate(Warper)	Warper#ecl	859
lasagna,196,187,4	duplicate(Warper)	Warper#las	859
malangdo,134,117,6	duplicate(Warper)	Warper#mal	859
malaya,231,204,4	duplicate(Warper)	Warper#ma	859
mora,57,152,4	duplicate(Warper)	Warper#mora	859


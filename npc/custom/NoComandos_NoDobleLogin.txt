//----------------COMANDO @changegm-------------

//INICIA RESTRICCION
-	script	changegm	-1,{
OnMon0200:
	bindatcmd "changegm",strnpcinfo(0)+"::OnAtcommand";
	end;
OnAtcommand:
	dispbottom "Lo siento, no puedes usar @changegm durante WOE.";
	end;
}
 

//TERMINA RESTRICCION
-	script	changegm	-1,{

OnMon0300:
	unbindatcmd "changegm";
	end;


}



//----------------COMANDO @changegm WOE ANCIENT-------------
-	script	changegm	-1,{
OnSun0200:
	bindatcmd "changegm",strnpcinfo(0)+"::OnAtcommand";
	end;
OnAtcommand:
	dispbottom "Lo siento, no puedes usar @changegm durante WOE.";
	end;
}
 

//TERMINA RESTRICCION WOE ANCIENT
-	script	changegm	-1,{

OnSun0300:
	unbindatcmd "changegm";
	end;


}






//----------------COMANDO @GSTORAGE-------------

-	script	GStorage	-1,{

OnMon0200:
    setarray .map$,
        "prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05",
		"arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05",
		"schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05";
    
	bindatcmd "gstorage",strnpcinfo(0)+"::OnAtcommand";
    end;

 
OnAtcommand:
    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) == .map$[.@i] ) {
            dispbottom "Lo siento, no puedes usar @gstorage en este mapa durante WOE.";
            end;
        }
		
    }

    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) != .map$[.@i] ) {
            openstorage;
            end;
        }
		
    }

}


-	script	GStorage	-1,{

OnMon0300:
	unbindatcmd "gstorage";
	end;


}


//----------------COMANDO @GSTORAGE WOE ANCIENT-------------
-	script	GStorage	-1,{

OnSun0200:
    setarray .map$,
        "prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05",
		"arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05",
		"schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05";
    
	bindatcmd "gstorage",strnpcinfo(0)+"::OnAtcommand";
    end;

 
OnAtcommand:
    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) == .map$[.@i] ) {
            dispbottom "Lo siento, no puedes usar @gstorage en este mapa durante WOE.";
            end;
        }
		
    }

    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) != .map$[.@i] ) {
            openstorage;
            end;
        }
		
    }

}


-	script	GStorage	-1,{

OnSun0300:
	unbindatcmd "gstorage";
	end;


}



//-------------------COMANDO @GUILDSTORAGE---------------


//INICIA RESTRICCION
-	script	GuildStorage	-1,{
OnMon0200:
	  setarray .map$,
        "prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05",
		"arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05",
		"schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05";
    
	bindatcmd "guildstorage",strnpcinfo(0)+"::OnAtcommand";
    end;

 
OnAtcommand:
    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) == .map$[.@i] ) {
            dispbottom "Lo siento, no puedes usar @guildstorage en este mapa durante WOE.";
            end;
        }
		
    }

    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) != .map$[.@i] ) {
            openstorage;
            end;
        }
		
    }

}


//TERMINA RESTRICCION
-	script	GuildStorage	-1,{

OnMon0300:
	unbindatcmd "guildstorage";
	end;


}





//-------------------COMANDO @GUILDSTORAGE WOE ANCIENT---------------


//INICIA RESTRICCION
-	script	GuildStorage	-1,{
OnSun0200:
	  setarray .map$,
        "prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05",
		"arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05",
		"schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05";
    
	bindatcmd "guildstorage",strnpcinfo(0)+"::OnAtcommand";
    end;

 
OnAtcommand:
    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) == .map$[.@i] ) {
            dispbottom "Lo siento, no puedes usar @guildstorage en este mapa durante WOE.";
            end;
        }
		
    }

    for ( .@i = 0; .@i < getarraysize(.map$); .@i++ ) {
        if (strcharinfo(3) != .map$[.@i] ) {
            openstorage;
            end;
        }
		
    }

}


//TERMINA RESTRICCION
-	script	GuildStorage	-1,{

OnSun0300:
	unbindatcmd "guildstorage";
	end;


}









































/*





//----------------------NO DOBLE LOGIN EN MAPAS DE WOE-------------------------


-	script	NoDobleLogin	-1,{
OnPCLoadMapEvent:
if( strcharinfo(3) == .Map$ ){

query_sql( "SELECT `last_ip` FROM `login` WHERE account_id="+getcharid(3)+"",.@IP );
query_sql( "SELECT `account_id` FROM `login` WHERE last_ip="+.@IP+"",.@Accountlist );

for( set .@i,0; .@i < getarraysize( .@Accountlist ); set .@i,.@i + 1 )
	if( isloggedin( .@Accountlist[.@i] ) ) 
		set .@DetectedOnline,.@DetectedOnline + 1;

	if( .@DetectedOnline > .Limit ){
		mes "We detected there is "+.@DetectedOnline+" Users with same IP Logged in.";
		mes "Please log off these unused account.";
		close2;
		warp "prontera",155,181;
	}
}
end;

OnMon0300:
// How many User with Same IP can logged in and stay at the specific map
set .Limit,1;
// What map will be restricted
set .Map$,"aldeg_cas04";
setmapflag .Map$,mf_loadevent;
end;



OnMon0400:
// How many User with Same IP can logged in and stay at the specific map
set .Limit,10;
// What map will be restricted
set .Map$,"aldeg_cas04";
setmapflag .Map$,mf_loadevent;
end;


OnMon1850:
// How many User with Same IP can logged in and stay at the specific map
set .Limit,10;
// What map will be restricted
set .Map$,"aldeg_cas04";
setmapflag .Map$,mf_loadevent;
end;

}







//----------------------NO DOBLE LOGIN EN MAPAS DE WOE ANCIENT-------------------------


-	script	NoDobleLogin	-1,{
OnPCLoadMapEvent:
if( strcharinfo(3) == .Map$ ){

query_sql( "SELECT `last_ip` FROM `login` WHERE account_id="+getcharid(3)+"",.@IP );
query_sql( "SELECT `account_id` FROM `login` WHERE last_ip="+.@IP+"",.@Accountlist );

for( set .@i,0; .@i < getarraysize( .@Accountlist ); set .@i,.@i + 1 )
	if( isloggedin( .@Accountlist[.@i] ) ) 
		set .@DetectedOnline,.@DetectedOnline + 1;

	if( .@DetectedOnline > .Limit ){
		mes "We detected there is "+.@DetectedOnline+" Users with same IP Logged in.";
		mes "Please log off these unused account.";
		close2;
		warp "prontera",155,181;
	}
}
end;

OnThu0300:
// How many User with Same IP can logged in and stay at the specific map
set .Limit,1;
// What map will be restricted
set .Map$,"payg_cas01";
setmapflag .Map$,mf_loadevent;
end;



OnThu0400:
// How many User with Same IP can logged in and stay at the specific map
set .Limit,10;
// What map will be restricted
set .Map$,"payg_cas01";
setmapflag .Map$,mf_loadevent;
end;


OnMon1832:
// How many User with Same IP can logged in and stay at the specific map
set .Limit,10;
// What map will be restricted
set .Map$,"payg_cas01";
setmapflag .Map$,mf_loadevent;
end;

}








-	script	dl_map	-1,{
OnPCLoadMapEvent:
getmapxy(.@amap$,.@mapx,.@mapy,0);
query_sql("SELECT last_ip FROM `login` WHERE account_id = "+getcharid(3)+"", .@LastIP$);
query_sql("SELECT account_id FROM `login` WHERE last_ip = '"+.@LastIP$+"'", .@AccountId);
set .@aidtemp,getcharid(3,strcharinfo(0));
	for(set .@i ,0;.@i<getarraysize(.@AccountId);set .@i,.@i+1){
		if(attachrid(.@AccountId[.@i])){
			getmapxy(.@qmap$,.@qmapx,.@qmapy,0);
				if (.@qmap$ == .@amap$){
						set .@j,.@j+1;
					}
				}
		}
		detachrid;
	
attachrid .@aidtemp;
	if(.@j > 1) {
		dispbottom "Lo siento, no está permitido el Double Login en éste mapa.";
		
		warp "prontera",156,183;
	}

end;
}


   
//------Enable map OnPCLoadMapEvent-------------------
payg_cas01	mapflag	loadevent
set .Map$,"payg_cas01";
setmapflag .Map$,mf_loadevent;










-	script	dl_map	-1,{
	end;

OnInit:
	// 1= if you have gepard 0=if you do not use gepard
	set .Gepard,1;
	end;
	
OnPCLoadMapEvent:
	if (.Gepard == 1) {
		getmapxy(.@map$,.@mapx,.@mapy,0);
		query_sql("SELECT last_unique_id FROM `login` WHERE account_id = "+getcharid(3)+"", .@UniqueId$);
		query_sql("SELECT account_id FROM `login` WHERE last_unique_id = '"+.@UniqueId$+"'", .@CuentaId);
		set .@error,getcharid(3,strcharinfo(0));
		for(set .@i ,0;.@i<getarraysize(.@CuentaId);set .@i,.@i+1) {
			if(attachrid(.@CuentaId[.@i])) {
				if (.@CuentaId == 2000001) {
					set .@j,0;
				} else {
					getmapxy(.@map2$,.@mapx2,.@mapy2,0);
					if (.@map2$ == .@map$){
						set .@j,.@j+1;
					}
				}
			}	
		}
		detachrid;
	
	attachrid .@error;
	if(.@j > 1) {
		dispbottom "Lo siento, en este mapa no está permitido el Double Login.";
		warp "prontera",156,183;
	}

	end;
	} else {
		getmapxy(.@map$,.@mapx,.@mapy,0);
		query_sql("SELECT last_ip FROM `login` WHERE account_id = "+getcharid(3)+"", .@UltimaIp$);
		query_sql("SELECT account_id FROM `login` WHERE last_ip = '"+.@UltimaIp$+"'", .@CuentaId);
		set .@error,getcharid(3,strcharinfo(0));
		for(set .@i ,0;.@i<getarraysize(.@CuentaId);set .@i,.@i+1) {
			if(attachrid(.@CuentaId[.@i])) {
//if .Gepard is 0 add id of accounts to which the system will not affect, brothers, couple, gms, etc ... .@CuentaId == accountId
				if (.@CuentaId == 2000001 || .@cuentaId == 2000156 || .@CuentaId == 2000249 || .@CuentaId == 2000002 || .@CuentaId == 2000031 || .@CuentaId == 2000050 || .@CuentaId == 2000021 || .@CuentaId == 2000073 || .@CuentaId == 2000029) {
					set .@j,0;
				} else {
					getmapxy(.@map2$,.@mapx2,.@mapy2,0);
					if (.@map2$ == .@map$){
						set .@j,.@j+1;
					}
				}
			}	
		}
		detachrid;
	
	attachrid .@error;
	if(.@j > 1) {
		dispbottom "Lo siento, en este mapa no está permitido el Double Login.";
		warp "prontera",156,183;
	}

	end;
	}
}

//loadevents
payg_cas01	mapflag	loadevent









*/

















